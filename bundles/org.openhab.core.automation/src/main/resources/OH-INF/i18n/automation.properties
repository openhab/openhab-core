# core.ChannelEventTrigger

module-type.core.ChannelEventTrigger.label = a trigger channel fires
module-type.core.ChannelEventTrigger.description = React on events from a trigger channel of a thing.
module-type.core.ChannelEventTrigger.config.channelUID.label = Channel
module-type.core.ChannelEventTrigger.config.channelUID.description = the id of the channel which should be observed for triggers
module-type.core.ChannelEventTrigger.config.event.label = Event
module-type.core.ChannelEventTrigger.config.event.description = the event on the channel to react on
module-type.core.ChannelEventTrigger.output.event.label = Event
module-type.core.ChannelEventTrigger.output.event.description = the event of the channel trigger

# core.GenericCompareCondition

module-type.core.GenericCompareCondition.label = CompareCondition
module-type.core.GenericCompareCondition.description = configurable compare condition
module-type.core.GenericCompareCondition.config.inputproperty.label = Input property
module-type.core.GenericCompareCondition.config.inputproperty.description = property of the input type to be compared
module-type.core.GenericCompareCondition.config.right.label = compare with
module-type.core.GenericCompareCondition.config.right.description = the value to be compared with the input
module-type.core.GenericCompareCondition.config.operator.label = Operator
module-type.core.GenericCompareCondition.config.operator.description = the compare operator, allowed are <,>,=,!=,>=,<= matches
module-type.core.GenericCompareCondition.input.input.label = input which will be compared
module-type.core.GenericCompareCondition.input.input.description = The input which will be compared.

# core.GenericEventCondition

module-type.core.GenericEventCondition.label = Event Condition
module-type.core.GenericEventCondition.description = Condition for events
module-type.core.GenericEventCondition.config.topic.label = Topic
module-type.core.GenericEventCondition.config.topic.description = the topic, as a file-system style glob (*, ** and {} operators). will match all events if empty
module-type.core.GenericEventCondition.config.source.label = Source
module-type.core.GenericEventCondition.config.source.description = the source of the event (e.g. org.openhab.core.expire, etc.). will match all events if empty
module-type.core.GenericEventCondition.config.types.label = Event Type
module-type.core.GenericEventCondition.config.types.description = the event type the trigger should listen to. multiple types can be specified comma-separated. will match all events if empty
module-type.core.GenericEventCondition.config.payload.label = Event Payload
module-type.core.GenericEventCondition.config.payload.description = A regex to match the event's serialized payload. will match all events if empty
module-type.core.GenericEventCondition.input.event.label = Event
module-type.core.GenericEventCondition.input.event.description = The event which was sent.

# core.GenericEventTrigger

module-type.core.GenericEventTrigger.label = Basic Event Trigger
module-type.core.GenericEventTrigger.description = Triggers Rules on Events
module-type.core.GenericEventTrigger.config.topic.label = Topic
module-type.core.GenericEventTrigger.config.topic.description = the topic, as a file-system style glob (*, ** and {} operators). will match all events if empty
module-type.core.GenericEventTrigger.config.source.label = Source
module-type.core.GenericEventTrigger.config.source.description = the source of the event (e.g. org.openhab.core.expire, etc.). will match all events if empty
module-type.core.GenericEventTrigger.config.types.label = Event Type
module-type.core.GenericEventTrigger.config.types.description = the event type the trigger should listen to. multiple types can be specified comma-separated. will match all events if empty
module-type.core.GenericEventTrigger.config.payload.label = Event Payload
module-type.core.GenericEventTrigger.config.payload.description = A regex to match the event's serialized payload. will match all events if empty
module-type.core.GenericEventTrigger.output.event.label = Event
module-type.core.GenericEventTrigger.output.event.description = The events which was sent.

# core.GroupCommandTrigger

module-type.core.GroupCommandTrigger.label = a member of an item group receives a command
module-type.core.GroupCommandTrigger.description = This triggers the rule if a member of an item group receives a command.
module-type.core.GroupCommandTrigger.config.groupName.label = Group
module-type.core.GroupCommandTrigger.config.groupName.description = the name of the item group
module-type.core.GroupCommandTrigger.config.command.label = Command
module-type.core.GroupCommandTrigger.config.command.description = the received command
module-type.core.GroupCommandTrigger.config.command.option.ON = ON
module-type.core.GroupCommandTrigger.config.command.option.OFF = OFF
module-type.core.GroupCommandTrigger.config.command.option.OPEN = OPEN
module-type.core.GroupCommandTrigger.config.command.option.CLOSED = CLOSED
module-type.core.GroupCommandTrigger.config.command.option.UP = UP
module-type.core.GroupCommandTrigger.config.command.option.DOWN = DOWN
module-type.core.GroupCommandTrigger.output.triggeringGroup.label = Triggering Group
module-type.core.GroupCommandTrigger.output.triggeringGroup.description = the group that the item belongs to
module-type.core.GroupCommandTrigger.output.triggeringItem.label = Triggering Item
module-type.core.GroupCommandTrigger.output.triggeringItem.description = the member of the group that received the command
module-type.core.GroupCommandTrigger.output.command.label = Command
module-type.core.GroupCommandTrigger.output.command.description = the received command
module-type.core.GroupCommandTrigger.output.event.label = Event
module-type.core.GroupCommandTrigger.output.event.description = The event which was sent.

# core.GroupStateChangeTrigger

module-type.core.GroupStateChangeTrigger.label = the state of a member of an item group changes
module-type.core.GroupStateChangeTrigger.description = This triggers the rule if the state of a member of an item group has changed.
module-type.core.GroupStateChangeTrigger.config.groupName.label = Group
module-type.core.GroupStateChangeTrigger.config.groupName.description = the name of the item group
module-type.core.GroupStateChangeTrigger.config.previousState.label = Previous State
module-type.core.GroupStateChangeTrigger.config.previousState.description = the required previous state of the item
module-type.core.GroupStateChangeTrigger.config.previousState.option.ON = ON
module-type.core.GroupStateChangeTrigger.config.previousState.option.OFF = OFF
module-type.core.GroupStateChangeTrigger.config.previousState.option.OPEN = OPEN
module-type.core.GroupStateChangeTrigger.config.previousState.option.CLOSED = CLOSED
module-type.core.GroupStateChangeTrigger.config.previousState.option.UP = UP
module-type.core.GroupStateChangeTrigger.config.previousState.option.DOWN = DOWN
module-type.core.GroupStateChangeTrigger.config.state.label = State
module-type.core.GroupStateChangeTrigger.config.state.description = the state of the item
module-type.core.GroupStateChangeTrigger.config.state.option.ON = ON
module-type.core.GroupStateChangeTrigger.config.state.option.OFF = OFF
module-type.core.GroupStateChangeTrigger.config.state.option.OPEN = OPEN
module-type.core.GroupStateChangeTrigger.config.state.option.CLOSED = CLOSED
module-type.core.GroupStateChangeTrigger.config.state.option.UP = UP
module-type.core.GroupStateChangeTrigger.config.state.option.DOWN = DOWN
module-type.core.GroupStateChangeTrigger.output.triggeringItem.label = Triggering Item
module-type.core.GroupStateChangeTrigger.output.triggeringItem.description = the member of the group that changed its state
module-type.core.GroupStateChangeTrigger.output.newState.label = New State
module-type.core.GroupStateChangeTrigger.output.newState.description = the new item state
module-type.core.GroupStateChangeTrigger.output.oldState.label = Old State
module-type.core.GroupStateChangeTrigger.output.oldState.description = the old item state
module-type.core.GroupStateChangeTrigger.output.event.label = Event
module-type.core.GroupStateChangeTrigger.output.event.description = The event which was sent.

# core.GroupStateUpdateTrigger

module-type.core.GroupStateUpdateTrigger.label = the state of a member of an item group is updated
module-type.core.GroupStateUpdateTrigger.description = This triggers the rule if the state of a member of an item group is updated (even if it does not change).
module-type.core.GroupStateUpdateTrigger.config.groupName.label = Group
module-type.core.GroupStateUpdateTrigger.config.groupName.description = the name of the item group
module-type.core.GroupStateUpdateTrigger.config.state.label = State
module-type.core.GroupStateUpdateTrigger.config.state.description = the state of the item
module-type.core.GroupStateUpdateTrigger.config.state.option.ON = ON
module-type.core.GroupStateUpdateTrigger.config.state.option.OFF = OFF
module-type.core.GroupStateUpdateTrigger.config.state.option.OPEN = OPEN
module-type.core.GroupStateUpdateTrigger.config.state.option.CLOSED = CLOSED
module-type.core.GroupStateUpdateTrigger.config.state.option.UP = UP
module-type.core.GroupStateUpdateTrigger.config.state.option.DOWN = DOWN
module-type.core.GroupStateUpdateTrigger.output.triggeringGroup.label = Triggering Group
module-type.core.GroupStateUpdateTrigger.output.triggeringGroup.description = the group that the item belongs to
module-type.core.GroupStateUpdateTrigger.output.triggeringItem.label = Triggering Item
module-type.core.GroupStateUpdateTrigger.output.triggeringItem.description = the member of the group that updated its state
module-type.core.GroupStateUpdateTrigger.output.state.label = State
module-type.core.GroupStateUpdateTrigger.output.state.description = the item state
module-type.core.GroupStateUpdateTrigger.output.event.label = Event
module-type.core.GroupStateUpdateTrigger.output.event.description = The event which was sent.

# core.ItemCommandAction

module-type.core.ItemCommandAction.label = send a command
module-type.core.ItemCommandAction.description = Sends a command to a specified item.
module-type.core.ItemCommandAction.config.itemName.label = Item
module-type.core.ItemCommandAction.config.itemName.description = the name of the item
module-type.core.ItemCommandAction.config.command.label = Command
module-type.core.ItemCommandAction.config.command.description = the command to be sent (overrides a potential input value)
module-type.core.ItemCommandAction.config.command.option.ON = ON
module-type.core.ItemCommandAction.config.command.option.OFF = OFF
module-type.core.ItemCommandAction.config.command.option.OPEN = OPEN
module-type.core.ItemCommandAction.config.command.option.CLOSED = CLOSED
module-type.core.ItemCommandAction.config.command.option.UP = UP
module-type.core.ItemCommandAction.config.command.option.DOWN = DOWN
module-type.core.ItemCommandAction.input.command.label = Command
module-type.core.ItemCommandAction.input.command.description = command that will be sent to the item.

# core.ItemCommandTrigger

module-type.core.ItemCommandTrigger.label = an item receives a command
module-type.core.ItemCommandTrigger.description = This triggers the rule if an item receives a command.
module-type.core.ItemCommandTrigger.config.itemName.label = Item
module-type.core.ItemCommandTrigger.config.itemName.description = the name of the item
module-type.core.ItemCommandTrigger.config.command.label = Command
module-type.core.ItemCommandTrigger.config.command.description = the received command
module-type.core.ItemCommandTrigger.config.command.option.ON = ON
module-type.core.ItemCommandTrigger.config.command.option.OFF = OFF
module-type.core.ItemCommandTrigger.config.command.option.OPEN = OPEN
module-type.core.ItemCommandTrigger.config.command.option.CLOSED = CLOSED
module-type.core.ItemCommandTrigger.config.command.option.UP = UP
module-type.core.ItemCommandTrigger.config.command.option.DOWN = DOWN
module-type.core.ItemCommandTrigger.output.command.label = Command
module-type.core.ItemCommandTrigger.output.command.description = the received command
module-type.core.ItemCommandTrigger.output.event.label = Event
module-type.core.ItemCommandTrigger.output.event.description = The event which was sent.

# core.ItemStateChangeTrigger

module-type.core.ItemStateChangeTrigger.label = an item state changes
module-type.core.ItemStateChangeTrigger.description = This triggers the rule if an item state has changed.
module-type.core.ItemStateChangeTrigger.config.itemName.label = Item
module-type.core.ItemStateChangeTrigger.config.itemName.description = the name of the item
module-type.core.ItemStateChangeTrigger.config.previousState.label = Previous State
module-type.core.ItemStateChangeTrigger.config.previousState.description = the required previous state of the item
module-type.core.ItemStateChangeTrigger.config.previousState.option.ON = ON
module-type.core.ItemStateChangeTrigger.config.previousState.option.OFF = OFF
module-type.core.ItemStateChangeTrigger.config.previousState.option.OPEN = OPEN
module-type.core.ItemStateChangeTrigger.config.previousState.option.CLOSED = CLOSED
module-type.core.ItemStateChangeTrigger.config.previousState.option.UP = UP
module-type.core.ItemStateChangeTrigger.config.previousState.option.DOWN = DOWN
module-type.core.ItemStateChangeTrigger.config.state.label = State
module-type.core.ItemStateChangeTrigger.config.state.description = the state of the item
module-type.core.ItemStateChangeTrigger.config.state.option.ON = ON
module-type.core.ItemStateChangeTrigger.config.state.option.OFF = OFF
module-type.core.ItemStateChangeTrigger.config.state.option.OPEN = OPEN
module-type.core.ItemStateChangeTrigger.config.state.option.CLOSED = CLOSED
module-type.core.ItemStateChangeTrigger.config.state.option.UP = UP
module-type.core.ItemStateChangeTrigger.config.state.option.DOWN = DOWN
module-type.core.ItemStateChangeTrigger.output.newState.label = New State
module-type.core.ItemStateChangeTrigger.output.newState.description = the new item state
module-type.core.ItemStateChangeTrigger.output.oldState.label = Old State
module-type.core.ItemStateChangeTrigger.output.oldState.description = the old item state
module-type.core.ItemStateChangeTrigger.output.event.label = Event
module-type.core.ItemStateChangeTrigger.output.event.description = The event which was sent.

# core.ItemStateCondition

module-type.core.ItemStateCondition.label = an item has a given state
module-type.core.ItemStateCondition.description = Compares the item state with the given value
module-type.core.ItemStateCondition.config.itemName.label = Item
module-type.core.ItemStateCondition.config.itemName.description = the name of the item
module-type.core.ItemStateCondition.config.operator.label = Operator
module-type.core.ItemStateCondition.config.operator.description = the compare operator (one of =,<,>,!=,>=,<=)
module-type.core.ItemStateCondition.config.operator.option.\= = =
module-type.core.ItemStateCondition.config.operator.option.!\= = !=
module-type.core.ItemStateCondition.config.operator.option.> = >
module-type.core.ItemStateCondition.config.operator.option.>\= = >=
module-type.core.ItemStateCondition.config.operator.option.< = <
module-type.core.ItemStateCondition.config.operator.option.<\= = <=
module-type.core.ItemStateCondition.config.state.label = State
module-type.core.ItemStateCondition.config.state.description = the state to be compared with
module-type.core.ItemStateCondition.config.state.option.ON = ON
module-type.core.ItemStateCondition.config.state.option.OFF = OFF
module-type.core.ItemStateCondition.config.state.option.OPEN = OPEN
module-type.core.ItemStateCondition.config.state.option.CLOSED = CLOSED
module-type.core.ItemStateCondition.config.state.option.UP = UP
module-type.core.ItemStateCondition.config.state.option.DOWN = DOWN

# core.ItemStateUpdateAction

module-type.core.ItemStateUpdateAction.label = update an item state
module-type.core.ItemStateUpdateAction.description = Updates the state of a specified item.
module-type.core.ItemStateUpdateAction.config.itemName.label = Item
module-type.core.ItemStateUpdateAction.config.itemName.description = the name of the item
module-type.core.ItemStateUpdateAction.config.state.label = State
module-type.core.ItemStateUpdateAction.config.state.description = the state to update the item to (overrides a potential input value)
module-type.core.ItemStateUpdateAction.config.state.option.ON = ON
module-type.core.ItemStateUpdateAction.config.state.option.OFF = OFF
module-type.core.ItemStateUpdateAction.config.state.option.OPEN = OPEN
module-type.core.ItemStateUpdateAction.config.state.option.CLOSED = CLOSED
module-type.core.ItemStateUpdateAction.config.state.option.UP = UP
module-type.core.ItemStateUpdateAction.config.state.option.DOWN = DOWN
module-type.core.ItemStateUpdateAction.input.state.label = State
module-type.core.ItemStateUpdateAction.input.state.description = state that the item will be set to

# core.ItemStateUpdateTrigger

module-type.core.ItemStateUpdateTrigger.label = an item state is updated
module-type.core.ItemStateUpdateTrigger.description = This triggers the rule if an item state is updated (even if it does not change).
module-type.core.ItemStateUpdateTrigger.config.itemName.label = Item
module-type.core.ItemStateUpdateTrigger.config.itemName.description = the name of the item
module-type.core.ItemStateUpdateTrigger.config.state.label = State
module-type.core.ItemStateUpdateTrigger.config.state.description = the state of the item
module-type.core.ItemStateUpdateTrigger.config.state.option.ON = ON
module-type.core.ItemStateUpdateTrigger.config.state.option.OFF = OFF
module-type.core.ItemStateUpdateTrigger.config.state.option.OPEN = OPEN
module-type.core.ItemStateUpdateTrigger.config.state.option.CLOSED = CLOSED
module-type.core.ItemStateUpdateTrigger.config.state.option.UP = UP
module-type.core.ItemStateUpdateTrigger.config.state.option.DOWN = DOWN
module-type.core.ItemStateUpdateTrigger.output.state.label = State
module-type.core.ItemStateUpdateTrigger.output.state.description = the item state
module-type.core.ItemStateUpdateTrigger.output.event.label = Event
module-type.core.ItemStateUpdateTrigger.output.event.description = The event which was sent.

# core.RuleEnablementAction

module-type.core.RuleEnablementAction.label = enables or disables rules
module-type.core.RuleEnablementAction.description = Enables or disables a rule or a group of rules specified by their UIDs.
module-type.core.RuleEnablementAction.config.enable.label = Enable rules
module-type.core.RuleEnablementAction.config.enable.description = 'true' enables all specified rules, 'false' disables them.
module-type.core.RuleEnablementAction.config.enable.option.true = Enable
module-type.core.RuleEnablementAction.config.enable.option.false = Disable
module-type.core.RuleEnablementAction.config.ruleUIDs.label = Rules
module-type.core.RuleEnablementAction.config.ruleUIDs.description = Specifies the rules that should be enabled or disabled.

# core.RunRuleAction

module-type.core.RunRuleAction.label = run rules
module-type.core.RunRuleAction.description = runs/executes a rule or a group of rules specified by their UIDs.
module-type.core.RunRuleAction.config.ruleUIDs.label = Rules
module-type.core.RunRuleAction.config.ruleUIDs.description = Specifies the target rule(s) that should be executed.
module-type.core.RunRuleAction.config.considerConditions.label = Consider Conditions
module-type.core.RunRuleAction.config.considerConditions.description = Specifies whether the conditions of the target rule(s) to be executed should be considered or not.
module-type.core.RunRuleAction.config.considerConditions.option.true = Yes
module-type.core.RunRuleAction.config.considerConditions.option.false = No

# core.SystemStartlevelTrigger

module-type.core.SystemStartlevelTrigger.label = a system start level is reached
module-type.core.SystemStartlevelTrigger.description = This triggers the rule if a given start level is reached by the system.
module-type.core.SystemStartlevelTrigger.config.startlevel.label = Start Level
module-type.core.SystemStartlevelTrigger.config.startlevel.description = The system start level.
module-type.core.SystemStartlevelTrigger.config.startlevel.option.40 = 40 - Rules loaded
module-type.core.SystemStartlevelTrigger.config.startlevel.option.50 = 50 - Rule engine started
module-type.core.SystemStartlevelTrigger.config.startlevel.option.70 = 70 - User interfaces started
module-type.core.SystemStartlevelTrigger.config.startlevel.option.80 = 80 - Things initialized
module-type.core.SystemStartlevelTrigger.config.startlevel.option.100 = 100 - Startup complete
module-type.core.SystemStartlevelTrigger.output.startlevel.label = Start Level
module-type.core.SystemStartlevelTrigger.output.startlevel.description = The system start level.

# core.ThingStatusChangeTrigger

module-type.core.ThingStatusChangeTrigger.label = a thing status changes
module-type.core.ThingStatusChangeTrigger.description = This triggers the rule if a thing status has changed.
module-type.core.ThingStatusChangeTrigger.config.thingUID.label = Thing
module-type.core.ThingStatusChangeTrigger.config.thingUID.description = The UID of the thing.
module-type.core.ThingStatusChangeTrigger.config.previousStatus.label = Previous Status
module-type.core.ThingStatusChangeTrigger.config.previousStatus.description = The previous status of the thing.
module-type.core.ThingStatusChangeTrigger.config.previousStatus.option.UNINITIALIZED = UNINITIALIZED
module-type.core.ThingStatusChangeTrigger.config.previousStatus.option.INITIALIZING = INITIALIZING
module-type.core.ThingStatusChangeTrigger.config.previousStatus.option.UNKNOWN = UNKNOWN
module-type.core.ThingStatusChangeTrigger.config.previousStatus.option.ONLINE = ONLINE
module-type.core.ThingStatusChangeTrigger.config.previousStatus.option.OFFLINE = OFFLINE
module-type.core.ThingStatusChangeTrigger.config.previousStatus.option.REMOVING = REMOVING
module-type.core.ThingStatusChangeTrigger.config.previousStatus.option.REMOVED = REMOVED
module-type.core.ThingStatusChangeTrigger.config.status.label = Status
module-type.core.ThingStatusChangeTrigger.config.status.description = The status of the thing.
module-type.core.ThingStatusChangeTrigger.config.status.option.UNINITIALIZED = UNINITIALIZED
module-type.core.ThingStatusChangeTrigger.config.status.option.INITIALIZING = INITIALIZING
module-type.core.ThingStatusChangeTrigger.config.status.option.UNKNOWN = UNKNOWN
module-type.core.ThingStatusChangeTrigger.config.status.option.ONLINE = ONLINE
module-type.core.ThingStatusChangeTrigger.config.status.option.OFFLINE = OFFLINE
module-type.core.ThingStatusChangeTrigger.config.status.option.REMOVING = REMOVING
module-type.core.ThingStatusChangeTrigger.config.status.option.REMOVED = REMOVED
module-type.core.ThingStatusChangeTrigger.output.newStatus.label = New Status
module-type.core.ThingStatusChangeTrigger.output.newStatus.description = The new status of the thing.
module-type.core.ThingStatusChangeTrigger.output.oldStatus.label = Old Status
module-type.core.ThingStatusChangeTrigger.output.oldStatus.description = The old status of the thing.
module-type.core.ThingStatusChangeTrigger.output.event.label = Event
module-type.core.ThingStatusChangeTrigger.output.event.description = The event which was sent.

# core.ThingStatusUpdateTrigger

module-type.core.ThingStatusUpdateTrigger.label = a thing status is updated
module-type.core.ThingStatusUpdateTrigger.description = This triggers the rule if a thing status is updated (even if it does not change).
module-type.core.ThingStatusUpdateTrigger.config.thingUID.label = Thing
module-type.core.ThingStatusUpdateTrigger.config.thingUID.description = The UID of the thing. You can use '*' as wildcard to match multiple things.
module-type.core.ThingStatusUpdateTrigger.config.status.label = Status
module-type.core.ThingStatusUpdateTrigger.config.status.description = The status of the thing.
module-type.core.ThingStatusUpdateTrigger.config.status.option.UNINITIALIZED = UNINITIALIZED
module-type.core.ThingStatusUpdateTrigger.config.status.option.INITIALIZING = INITIALIZING
module-type.core.ThingStatusUpdateTrigger.config.status.option.UNKNOWN = UNKNOWN
module-type.core.ThingStatusUpdateTrigger.config.status.option.ONLINE = ONLINE
module-type.core.ThingStatusUpdateTrigger.config.status.option.OFFLINE = OFFLINE
module-type.core.ThingStatusUpdateTrigger.config.status.option.REMOVING = REMOVING
module-type.core.ThingStatusUpdateTrigger.config.status.option.REMOVED = REMOVED
module-type.core.ThingStatusUpdateTrigger.output.status.label = Status
module-type.core.ThingStatusUpdateTrigger.output.status.description = The status of the thing.
module-type.core.ThingStatusUpdateTrigger.output.event.label = Event
module-type.core.ThingStatusUpdateTrigger.output.event.description = The event which was sent.

# core.TimeOfDayCondition

module-type.core.TimeOfDayCondition.label = it is a certain time of day
module-type.core.TimeOfDayCondition.description = Evaluates if the current time is within a user-configured time span.
module-type.core.TimeOfDayCondition.config.startTime.label = Start Time
module-type.core.TimeOfDayCondition.config.startTime.description = Start of the time span (in hh:mm)
module-type.core.TimeOfDayCondition.config.endTime.label = End Time
module-type.core.TimeOfDayCondition.config.endTime.description = End of the time span (in hh:mm)

# ephemeris.DaysetCondition

module-type.ephemeris.DaysetCondition.label = it is a day in a configured dayset
module-type.ephemeris.DaysetCondition.description = Checks if the current day is in a configured dayset.
module-type.ephemeris.DaysetCondition.config.dayset.label = Dayset
module-type.ephemeris.DaysetCondition.config.dayset.description = Name of the requested dayset, without prefix.
module-type.ephemeris.DaysetCondition.config.offset.label = Offset
module-type.ephemeris.DaysetCondition.config.offset.description = Today +/- offset days (+1 = tomorrow, -1 = yesterday).

# ephemeris.HolidayCondition

module-type.ephemeris.HolidayCondition.label = it is a holiday
module-type.ephemeris.HolidayCondition.description = Checks if the current day is a holiday.
module-type.ephemeris.HolidayCondition.config.offset.label = Offset
module-type.ephemeris.HolidayCondition.config.offset.description = Today +/- offset days (+1 = tomorrow, -1 = yesterday).

# ephemeris.NotHolidayCondition

module-type.ephemeris.NotHolidayCondition.label = it is not a holiday
module-type.ephemeris.NotHolidayCondition.description = Checks if the current day is not a holiday.
module-type.ephemeris.NotHolidayCondition.config.offset.label = Offset
module-type.ephemeris.NotHolidayCondition.config.offset.description = Today +/- offset days (+1 = tomorrow, -1 = yesterday).

# ephemeris.WeekdayCondition

module-type.ephemeris.WeekdayCondition.label = it is a weekday
module-type.ephemeris.WeekdayCondition.description = Checks if the current day is not on the weekend.
module-type.ephemeris.WeekdayCondition.config.offset.label = Offset
module-type.ephemeris.WeekdayCondition.config.offset.description = Today +/- offset days (+1 = tomorrow, -1 = yesterday).

# ephemeris.WeekendCondition

module-type.ephemeris.WeekendCondition.label = it is a weekend
module-type.ephemeris.WeekendCondition.description = Checks if the current day is on the weekend.
module-type.ephemeris.WeekendCondition.config.offset.label = Offset
module-type.ephemeris.WeekendCondition.config.offset.description = Today +/- offset days (+1 = tomorrow, -1 = yesterday).

# timer.DateTimeTrigger

module-type.timer.DateTimeTrigger.label = it is a date and time specified in an item
module-type.timer.DateTimeTrigger.description = Triggers at a time specified in an item
module-type.timer.DateTimeTrigger.config.itemName.label = Item
module-type.timer.DateTimeTrigger.config.itemName.description = the name of the item
module-type.timer.DateTimeTrigger.config.timeOnly.label = Time only
module-type.timer.DateTimeTrigger.config.timeOnly.description = Specifies whether only the time of the item should be compared or the date and time.
module-type.timer.DateTimeTrigger.config.timeOnly.option.true = Yes
module-type.timer.DateTimeTrigger.config.timeOnly.option.false = No

# timer.DayOfWeekCondition

module-type.timer.DayOfWeekCondition.label = it is a certain day of the week
module-type.timer.DayOfWeekCondition.description = checks for the current day of the week
module-type.timer.DayOfWeekCondition.config.days.label = Days of the week
module-type.timer.DayOfWeekCondition.config.days.description = the days of the week when the rule should be active

# timer.GenericCronTrigger

module-type.timer.GenericCronTrigger.label = cron trigger
module-type.timer.GenericCronTrigger.description = This triggers a rule based on a cron expression
module-type.timer.GenericCronTrigger.config.cronExpression.label = cron expression
module-type.timer.GenericCronTrigger.config.cronExpression.description = the cron expression

# timer.TimeOfDayTrigger

module-type.timer.TimeOfDayTrigger.label = it is a fixed time of day
module-type.timer.TimeOfDayTrigger.description = Triggers at a specified time
module-type.timer.TimeOfDayTrigger.config.time.label = Time
module-type.timer.TimeOfDayTrigger.config.time.description = the time (in hh:mm)
