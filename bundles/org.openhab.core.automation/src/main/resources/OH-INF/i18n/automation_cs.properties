# core.ChannelEventTrigger

module-type.core.ChannelEventTrigger.label = událost kanálu spustí
module-type.core.ChannelEventTrigger.description = Reakce na událost spouštěče kanálu dané věci.
module-type.core.ChannelEventTrigger.config.channelUID.label = Kanál
module-type.core.ChannelEventTrigger.config.channelUID.description = id kanálu, u kterého by měl být sledován spouštěč
module-type.core.ChannelEventTrigger.config.event.label = Událost
module-type.core.ChannelEventTrigger.config.event.description = událost na kanálu, na kterou chcete reagovat
module-type.core.ChannelEventTrigger.output.event.label = Událost
module-type.core.ChannelEventTrigger.output.event.description = událost spouštěče kanálu

# core.GenericCompareCondition

module-type.core.GenericCompareCondition.label = Porovnávací podmínka
module-type.core.GenericCompareCondition.description = konfigurovatelná porovnávací podmínka
module-type.core.GenericCompareCondition.config.inputproperty.label = Vstupní vlastnost
module-type.core.GenericCompareCondition.config.inputproperty.description = vlastnost vstupního typu, která má být porovnána
module-type.core.GenericCompareCondition.config.right.label = porovnat s
module-type.core.GenericCompareCondition.config.right.description = hodnota, která má být porovnána se vstupem
module-type.core.GenericCompareCondition.config.operator.label = Operátor
module-type.core.GenericCompareCondition.config.operator.description = povolené operátory porovnání jsou <,>,\=,\!\=,>\=,<\=
module-type.core.GenericCompareCondition.input.input.label = vstup, které bude porovnán
module-type.core.GenericCompareCondition.input.input.description = Vstup, které bude porovnán.

# core.GenericEventCondition

module-type.core.GenericEventCondition.label = Podmínka události
module-type.core.GenericEventCondition.description = Podmínka pro události
module-type.core.GenericEventCondition.config.topic.label = Téma
module-type.core.GenericEventCondition.config.topic.description = Téma, jako u souborového systému (operátory *, ** a {}). Pokud není zadáno, všechny události jsou umožněny.
module-type.core.GenericEventCondition.config.source.label = Zdroj
module-type.core.GenericEventCondition.config.source.description = Zdroj události (např. org.openhab.core.expire atd.). Pokud není zadáno, všechny události jsou umožněny.
module-type.core.GenericEventCondition.config.types.label = Typ události
module-type.core.GenericEventCondition.config.types.description = Typ události, kterou by měl spouštěč odposlouchávat. Více typů může být zadáno jako seznam oddělený čárkou. Pokud není zadáno, všechny události jsou umožněny.
module-type.core.GenericEventCondition.config.payload.label = Obsah události
module-type.core.GenericEventCondition.config.payload.description = Regulární výraz, který musí být splněn nad serializovaným obsahem události. Pokud není zadáno, všechny události jsou umožněny.
module-type.core.GenericEventCondition.input.event.label = Událost
module-type.core.GenericEventCondition.input.event.description = Událost, která byla odeslána.

# core.GenericEventTrigger

module-type.core.GenericEventTrigger.label = Základní spouštěč událostí
module-type.core.GenericEventTrigger.description = Pravidla spouštěčů událostí
module-type.core.GenericEventTrigger.config.topic.label = Téma
module-type.core.GenericEventTrigger.config.topic.description = Téma, jako u souborového systému (operátory *, ** a {}). Pokud není zadáno, všechny události jsou umožněny.
module-type.core.GenericEventTrigger.config.source.label = Zdroj
module-type.core.GenericEventTrigger.config.source.description = Zdroj události (např. org.openhab.core.expire atd.). Pokud není zadáno, všechny události jsou umožněny.
module-type.core.GenericEventTrigger.config.types.label = Typ události
module-type.core.GenericEventTrigger.config.types.description = Typ události, kterou by měl spouštěč odposlouchávat. Více typů může být zadáno jako seznam oddělený čárkou. Pokud není zadáno, všechny události jsou umožněny.
module-type.core.GenericEventTrigger.config.payload.label = Obsah události
module-type.core.GenericEventTrigger.config.payload.description = Regulární výraz, který musí být splněn nad serializovaným obsahem události. Pokud není zadáno, všechny události jsou umožněny.
module-type.core.GenericEventTrigger.output.event.label = Událost
module-type.core.GenericEventTrigger.output.event.description = Událost, která byla odeslána.

# core.GroupCommandTrigger

module-type.core.GroupCommandTrigger.label = člen skupiny položek obdrží příkaz
module-type.core.GroupCommandTrigger.description = Toto aktivuje pravidlo, pokud člen skupiny položek obdrží příkaz.
module-type.core.GroupCommandTrigger.config.groupName.label = Skupina
module-type.core.GroupCommandTrigger.config.groupName.description = název skupiny položek
module-type.core.GroupCommandTrigger.config.command.label = Příkaz
module-type.core.GroupCommandTrigger.config.command.description = přijatý příkaz
module-type.core.GroupCommandTrigger.config.command.option.ON = ZAP
module-type.core.GroupCommandTrigger.config.command.option.OFF = VYP
module-type.core.GroupCommandTrigger.config.command.option.OPEN = OTEVŘENO
module-type.core.GroupCommandTrigger.config.command.option.CLOSED = ZAVŘENO
module-type.core.GroupCommandTrigger.config.command.option.UP = NAHORU
module-type.core.GroupCommandTrigger.config.command.option.DOWN = DOLŮ
module-type.core.GroupCommandTrigger.output.triggeringGroup.label = Spouštěcí skupina
module-type.core.GroupCommandTrigger.output.triggeringGroup.description = skupina, do které daná položka patří
module-type.core.GroupCommandTrigger.output.triggeringItem.label = Spouštěcí položka
module-type.core.GroupCommandTrigger.output.triggeringItem.description = člen skupiny, který obdržel příkaz
module-type.core.GroupCommandTrigger.output.command.label = Příkaz
module-type.core.GroupCommandTrigger.output.command.description = přijatý příkaz
module-type.core.GroupCommandTrigger.output.event.label = Událost
module-type.core.GroupCommandTrigger.output.event.description = Událost, která byla odeslána.

# core.GroupStateChangeTrigger

module-type.core.GroupStateChangeTrigger.label = stav člena skupiny položek se mění
module-type.core.GroupStateChangeTrigger.description = To spustí pravidlo, pokud se změnil stav člena skupiny položek.
module-type.core.GroupStateChangeTrigger.config.groupName.label = Skupina
module-type.core.GroupStateChangeTrigger.config.groupName.description = název skupiny položek
module-type.core.GroupStateChangeTrigger.config.previousState.label = Předchozí stav
module-type.core.GroupStateChangeTrigger.config.previousState.description = je požadováno, aby předchozí stav položky byl tento
module-type.core.GroupStateChangeTrigger.config.previousState.option.ON = ZAP
module-type.core.GroupStateChangeTrigger.config.previousState.option.OFF = VYP
module-type.core.GroupStateChangeTrigger.config.previousState.option.OPEN = OTEVŘENO
module-type.core.GroupStateChangeTrigger.config.previousState.option.CLOSED = ZAVŘENO
module-type.core.GroupStateChangeTrigger.config.previousState.option.UP = NAHORU
module-type.core.GroupStateChangeTrigger.config.previousState.option.DOWN = DOLŮ
module-type.core.GroupStateChangeTrigger.config.state.label = Stav
module-type.core.GroupStateChangeTrigger.config.state.description = stav položky
module-type.core.GroupStateChangeTrigger.config.state.option.ON = ZAP
module-type.core.GroupStateChangeTrigger.config.state.option.OFF = VYP
module-type.core.GroupStateChangeTrigger.config.state.option.OPEN = OTEVŘENO
module-type.core.GroupStateChangeTrigger.config.state.option.CLOSED = ZAVŘENO
module-type.core.GroupStateChangeTrigger.config.state.option.UP = NAHORU
module-type.core.GroupStateChangeTrigger.config.state.option.DOWN = DOLŮ
module-type.core.GroupStateChangeTrigger.output.triggeringItem.label = Spouštěcí položka
module-type.core.GroupStateChangeTrigger.output.triggeringItem.description = člen skupiny, který změnil svůj stav
module-type.core.GroupStateChangeTrigger.output.newState.label = Nový stav
module-type.core.GroupStateChangeTrigger.output.newState.description = nový stav položky
module-type.core.GroupStateChangeTrigger.output.oldState.label = Starý stav
module-type.core.GroupStateChangeTrigger.output.oldState.description = starý stav položky
module-type.core.GroupStateChangeTrigger.output.event.label = Událost
module-type.core.GroupStateChangeTrigger.output.event.description = Událost, která byla odeslána.

# core.GroupStateUpdateTrigger

module-type.core.GroupStateUpdateTrigger.label = stav člena skupiny položek je aktualizován
module-type.core.GroupStateUpdateTrigger.description = Toto spustí pravidlo, pokud je stav člena skupiny položek aktualizován (i když se nemění).
module-type.core.GroupStateUpdateTrigger.config.groupName.label = Skupina
module-type.core.GroupStateUpdateTrigger.config.groupName.description = název skupiny položek
module-type.core.GroupStateUpdateTrigger.config.state.label = Stav
module-type.core.GroupStateUpdateTrigger.config.state.description = stav položky
module-type.core.GroupStateUpdateTrigger.config.state.option.ON = ZAP
module-type.core.GroupStateUpdateTrigger.config.state.option.OFF = VYP
module-type.core.GroupStateUpdateTrigger.config.state.option.OPEN = OTEVŘENO
module-type.core.GroupStateUpdateTrigger.config.state.option.CLOSED = ZAVŘENO
module-type.core.GroupStateUpdateTrigger.config.state.option.UP = NAHORU
module-type.core.GroupStateUpdateTrigger.config.state.option.DOWN = DOLŮ
module-type.core.GroupStateUpdateTrigger.output.triggeringGroup.label = Spouštěcí skupina
module-type.core.GroupStateUpdateTrigger.output.triggeringGroup.description = skupina, do které daná položka patří
module-type.core.GroupStateUpdateTrigger.output.triggeringItem.label = Spouštěcí položka
module-type.core.GroupStateUpdateTrigger.output.triggeringItem.description = člen skupiny, který aktualizoval svůj stav
module-type.core.GroupStateUpdateTrigger.output.state.label = Stav
module-type.core.GroupStateUpdateTrigger.output.state.description = stav položky
module-type.core.GroupStateUpdateTrigger.output.event.label = Událost
module-type.core.GroupStateUpdateTrigger.output.event.description = Událost, která byla odeslána.

# core.ItemCommandAction

module-type.core.ItemCommandAction.label = odeslat příkaz
module-type.core.ItemCommandAction.description = Odešle příkaz zadané položce.
module-type.core.ItemCommandAction.config.itemName.label = Položka
module-type.core.ItemCommandAction.config.itemName.description = název položky
module-type.core.ItemCommandAction.config.command.label = Příkaz
module-type.core.ItemCommandAction.config.command.description = příkaz, který má být odeslán (přepíše potenciální vstupní hodnotu)
module-type.core.ItemCommandAction.config.command.option.ON = ZAP
module-type.core.ItemCommandAction.config.command.option.OFF = VYP
module-type.core.ItemCommandAction.config.command.option.OPEN = OTEVŘENO
module-type.core.ItemCommandAction.config.command.option.CLOSED = ZAVŘENO
module-type.core.ItemCommandAction.config.command.option.UP = NAHORU
module-type.core.ItemCommandAction.config.command.option.DOWN = DOLŮ
module-type.core.ItemCommandAction.input.command.label = Příkaz
module-type.core.ItemCommandAction.input.command.description = příkaz, který bude odeslán položce.

# core.ItemCommandTrigger

module-type.core.ItemCommandTrigger.label = položka obdrží příkaz
module-type.core.ItemCommandTrigger.description = Toto spustí pravidlo, pokud položka obdrží příkaz.
module-type.core.ItemCommandTrigger.config.itemName.label = Položka
module-type.core.ItemCommandTrigger.config.itemName.description = název položky
module-type.core.ItemCommandTrigger.config.command.label = Příkaz
module-type.core.ItemCommandTrigger.config.command.description = přijatý příkaz
module-type.core.ItemCommandTrigger.config.command.option.ON = ZAP
module-type.core.ItemCommandTrigger.config.command.option.OFF = VYP
module-type.core.ItemCommandTrigger.config.command.option.OPEN = OTEVŘENO
module-type.core.ItemCommandTrigger.config.command.option.CLOSED = ZAVŘENO
module-type.core.ItemCommandTrigger.config.command.option.UP = NAHORU
module-type.core.ItemCommandTrigger.config.command.option.DOWN = DOLŮ
module-type.core.ItemCommandTrigger.output.command.label = Příkaz
module-type.core.ItemCommandTrigger.output.command.description = přijatý příkaz
module-type.core.ItemCommandTrigger.output.event.label = Událost
module-type.core.ItemCommandTrigger.output.event.description = Událost, která byla odeslána.

# core.ItemStateChangeTrigger

module-type.core.ItemStateChangeTrigger.label = změna stavu položky
module-type.core.ItemStateChangeTrigger.description = Toto spustí pravidlo, pokud se změnil stav položky.
module-type.core.ItemStateChangeTrigger.config.itemName.label = Položka
module-type.core.ItemStateChangeTrigger.config.itemName.description = název položky
module-type.core.ItemStateChangeTrigger.config.previousState.label = Předchozí stav
module-type.core.ItemStateChangeTrigger.config.previousState.description = je požadováno, aby předchozí stav položky byl tento
module-type.core.ItemStateChangeTrigger.config.previousState.option.ON = ZAP
module-type.core.ItemStateChangeTrigger.config.previousState.option.OFF = VYP
module-type.core.ItemStateChangeTrigger.config.previousState.option.OPEN = OTEVŘENO
module-type.core.ItemStateChangeTrigger.config.previousState.option.CLOSED = ZAVŘENO
module-type.core.ItemStateChangeTrigger.config.previousState.option.UP = NAHORU
module-type.core.ItemStateChangeTrigger.config.previousState.option.DOWN = DOLŮ
module-type.core.ItemStateChangeTrigger.config.state.label = Stav
module-type.core.ItemStateChangeTrigger.config.state.description = stav položky
module-type.core.ItemStateChangeTrigger.config.state.option.ON = ZAP
module-type.core.ItemStateChangeTrigger.config.state.option.OFF = VYP
module-type.core.ItemStateChangeTrigger.config.state.option.OPEN = OTEVŘENO
module-type.core.ItemStateChangeTrigger.config.state.option.CLOSED = ZAVŘENO
module-type.core.ItemStateChangeTrigger.config.state.option.UP = NAHORU
module-type.core.ItemStateChangeTrigger.config.state.option.DOWN = DOLŮ
module-type.core.ItemStateChangeTrigger.output.newState.label = Nový stav
module-type.core.ItemStateChangeTrigger.output.newState.description = nový stav položky
module-type.core.ItemStateChangeTrigger.output.oldState.label = Starý stav
module-type.core.ItemStateChangeTrigger.output.oldState.description = starý stav položky
module-type.core.ItemStateChangeTrigger.output.event.label = Událost
module-type.core.ItemStateChangeTrigger.output.event.description = Událost, která byla odeslána.

# core.ItemStateCondition

module-type.core.ItemStateCondition.label = položka má daný stav
module-type.core.ItemStateCondition.description = Porovnává stav položky s danou hodnotou
module-type.core.ItemStateCondition.config.itemName.label = Položka
module-type.core.ItemStateCondition.config.itemName.description = název položky
module-type.core.ItemStateCondition.config.operator.label = Operátor
module-type.core.ItemStateCondition.config.operator.description = operátor porovnání (jeden z \=,<,>,\!\=,>\=,<\=)
module-type.core.ItemStateCondition.config.operator.option.\= = \=
module-type.core.ItemStateCondition.config.operator.option.\!\= = \!\=
module-type.core.ItemStateCondition.config.operator.option.> = >
module-type.core.ItemStateCondition.config.operator.option.>\= = >\=
module-type.core.ItemStateCondition.config.operator.option.< = <
module-type.core.ItemStateCondition.config.operator.option.<\= = <\=
module-type.core.ItemStateCondition.config.state.label = Stav
module-type.core.ItemStateCondition.config.state.description = stát, který má být porovnán s
module-type.core.ItemStateCondition.config.state.option.ON = ZAP
module-type.core.ItemStateCondition.config.state.option.OFF = VYP
module-type.core.ItemStateCondition.config.state.option.OPEN = OTEVŘENO
module-type.core.ItemStateCondition.config.state.option.CLOSED = ZAVŘENO
module-type.core.ItemStateCondition.config.state.option.UP = NAHORU
module-type.core.ItemStateCondition.config.state.option.DOWN = DOLŮ

# core.ItemStateUpdateAction

module-type.core.ItemStateUpdateAction.label = aktualizovat stav položky
module-type.core.ItemStateUpdateAction.description = Aktualizuje stav zadané položky.
module-type.core.ItemStateUpdateAction.config.itemName.label = Položka
module-type.core.ItemStateUpdateAction.config.itemName.description = název položky
module-type.core.ItemStateUpdateAction.config.state.label = Stav
module-type.core.ItemStateUpdateAction.config.state.description = stav, na který se má položka aktualizovat (přepíše potenciální vstupní hodnotu)
module-type.core.ItemStateUpdateAction.config.state.option.ON = ZAP
module-type.core.ItemStateUpdateAction.config.state.option.OFF = VYP
module-type.core.ItemStateUpdateAction.config.state.option.OPEN = OTEVŘENO
module-type.core.ItemStateUpdateAction.config.state.option.CLOSED = ZAVŘENO
module-type.core.ItemStateUpdateAction.config.state.option.UP = NAHORU
module-type.core.ItemStateUpdateAction.config.state.option.DOWN = DOLŮ
module-type.core.ItemStateUpdateAction.input.state.label = Stav
module-type.core.ItemStateUpdateAction.input.state.description = stav, na který bude položka nastavena

# core.ItemStateUpdateTrigger

module-type.core.ItemStateUpdateTrigger.label = stav položky je aktualizován
module-type.core.ItemStateUpdateTrigger.description = Toto spustí pravidlo, pokud je stav položky aktualizován (i když se nemění).
module-type.core.ItemStateUpdateTrigger.config.itemName.label = Položka
module-type.core.ItemStateUpdateTrigger.config.itemName.description = název položky
module-type.core.ItemStateUpdateTrigger.config.state.label = Stav
module-type.core.ItemStateUpdateTrigger.config.state.description = stav položky
module-type.core.ItemStateUpdateTrigger.config.state.option.ON = ZAP
module-type.core.ItemStateUpdateTrigger.config.state.option.OFF = VYP
module-type.core.ItemStateUpdateTrigger.config.state.option.OPEN = OTEVŘENO
module-type.core.ItemStateUpdateTrigger.config.state.option.CLOSED = ZAVŘENO
module-type.core.ItemStateUpdateTrigger.config.state.option.UP = NAHORU
module-type.core.ItemStateUpdateTrigger.config.state.option.DOWN = DOLŮ
module-type.core.ItemStateUpdateTrigger.output.state.label = Stav
module-type.core.ItemStateUpdateTrigger.output.state.description = stav položky
module-type.core.ItemStateUpdateTrigger.output.event.label = Událost
module-type.core.ItemStateUpdateTrigger.output.event.description = Událost, která byla odeslána.

# core.RuleEnablementAction

module-type.core.RuleEnablementAction.label = povolit nebo zakázat scény, skripty a pravidla
module-type.core.RuleEnablementAction.description = Povolí nebo zakáže jednu nebo více skupin určených jejich UID.
module-type.core.RuleEnablementAction.config.enable.label = Povolit/Zakázat
module-type.core.RuleEnablementAction.config.enable.description = "true" povolí všechny zadané, "false" je zakáže.
module-type.core.RuleEnablementAction.config.enable.option.true = Povolit
module-type.core.RuleEnablementAction.config.enable.option.false = Zakázat
module-type.core.RuleEnablementAction.config.ruleUIDs.label = Scény, skripty a pravidla
module-type.core.RuleEnablementAction.config.ruleUIDs.description = Určuje ty, které by měly být povoleny nebo zakázány.

# core.RunRuleAction

module-type.core.RunRuleAction.label = spustit scény, skripty a pravidla
module-type.core.RunRuleAction.description = Spustí / provede jednu akci nebo jejich skupinu určenou jejich UID.
module-type.core.RunRuleAction.config.ruleUIDs.label = Scény, skripty a pravidla
module-type.core.RunRuleAction.config.ruleUIDs.description = Určuje cílovou scénu (scény), skripty a pravidla, která by měla být provedena.
module-type.core.RunRuleAction.config.considerConditions.label = Vzít v potaz podmínky
module-type.core.RunRuleAction.config.considerConditions.description = Určuje, zda podmínky cílového pravidla (pravidel), které má být spuštěno, mají být brány v potaz či ne.
module-type.core.RunRuleAction.config.considerConditions.option.true = Ano
module-type.core.RunRuleAction.config.considerConditions.option.false = Ne

# core.SystemStartlevelTrigger

module-type.core.SystemStartlevelTrigger.label = bylo dosaženo úrovně startu systému
module-type.core.SystemStartlevelTrigger.description = Spustí pravidlo, pokud systém v průběhu svého startu dosáhne dané úrovně.
module-type.core.SystemStartlevelTrigger.config.startlevel.label = Úroveň startu systému
module-type.core.SystemStartlevelTrigger.config.startlevel.description = Dosažená úroveň startu systému.
module-type.core.SystemStartlevelTrigger.config.startlevel.option.40 = 40 - Pravidla načtena
module-type.core.SystemStartlevelTrigger.config.startlevel.option.50 = 50 - Systém pro spuštění pravidel spuštěn
module-type.core.SystemStartlevelTrigger.config.startlevel.option.70 = 70 - Uživatelská rozhraní spuštěna
module-type.core.SystemStartlevelTrigger.config.startlevel.option.80 = 80 - Věci jsou inicializovány
module-type.core.SystemStartlevelTrigger.config.startlevel.option.100 = 100 - Start systému je dokončen
module-type.core.SystemStartlevelTrigger.output.startlevel.label = Úroveň startu systému
module-type.core.SystemStartlevelTrigger.output.startlevel.description = Dosažená úroveň startu systému.

# core.ThingStatusChangeTrigger

module-type.core.ThingStatusChangeTrigger.label = stav věci se mění
module-type.core.ThingStatusChangeTrigger.description = To spustí pravidlo, pokud se změnil stav věci.
module-type.core.ThingStatusChangeTrigger.config.thingUID.label = Věc
module-type.core.ThingStatusChangeTrigger.config.thingUID.description = UID věci.
module-type.core.ThingStatusChangeTrigger.config.previousStatus.label = Předchozí stav
module-type.core.ThingStatusChangeTrigger.config.previousStatus.description = Předchozí stav věci.
module-type.core.ThingStatusChangeTrigger.config.previousStatus.option.UNINITIALIZED = NEINICIALIZOVANÝ
module-type.core.ThingStatusChangeTrigger.config.previousStatus.option.INITIALIZING = INICIALIZUJE SE
module-type.core.ThingStatusChangeTrigger.config.previousStatus.option.UNKNOWN = NEZNÁMÝ
module-type.core.ThingStatusChangeTrigger.config.previousStatus.option.ONLINE = PŘIPOJENÝ
module-type.core.ThingStatusChangeTrigger.config.previousStatus.option.OFFLINE = ODPOJENÝ
module-type.core.ThingStatusChangeTrigger.config.previousStatus.option.REMOVING = ODSTRAŇOVANÝ
module-type.core.ThingStatusChangeTrigger.config.previousStatus.option.REMOVED = ODSTRANĚNÝ
module-type.core.ThingStatusChangeTrigger.config.status.label = Stav
module-type.core.ThingStatusChangeTrigger.config.status.description = Stav věci.
module-type.core.ThingStatusChangeTrigger.config.status.option.UNINITIALIZED = NEINICIALIZOVANÝ
module-type.core.ThingStatusChangeTrigger.config.status.option.INITIALIZING = INICIALIZUJE SE
module-type.core.ThingStatusChangeTrigger.config.status.option.UNKNOWN = NEZNÁMÝ
module-type.core.ThingStatusChangeTrigger.config.status.option.ONLINE = PŘIPOJENÝ
module-type.core.ThingStatusChangeTrigger.config.status.option.OFFLINE = ODPOJENÝ
module-type.core.ThingStatusChangeTrigger.config.status.option.REMOVING = ODSTRAŇOVANÝ
module-type.core.ThingStatusChangeTrigger.config.status.option.REMOVED = ODSTRANĚNÝ
module-type.core.ThingStatusChangeTrigger.output.newStatus.label = Nový status
module-type.core.ThingStatusChangeTrigger.output.newStatus.description = Nový stav věci.
module-type.core.ThingStatusChangeTrigger.output.oldStatus.label = Starý stav
module-type.core.ThingStatusChangeTrigger.output.oldStatus.description = Starý stav věci.
module-type.core.ThingStatusChangeTrigger.output.event.label = Událost
module-type.core.ThingStatusChangeTrigger.output.event.description = Událost, která byla odeslána.

# core.ThingStatusUpdateTrigger

module-type.core.ThingStatusUpdateTrigger.label = je aktualizován stav věci
module-type.core.ThingStatusUpdateTrigger.description = Toto spustí pravidlo, pokud je stav věci aktualizován (i když se nemění).
module-type.core.ThingStatusUpdateTrigger.config.thingUID.label = Věc
module-type.core.ThingStatusUpdateTrigger.config.thingUID.description = UID věci. Můžete použít '*' jako zástupný znak, aby se shodovalo s více věcmi.
module-type.core.ThingStatusUpdateTrigger.config.status.label = Stav
module-type.core.ThingStatusUpdateTrigger.config.status.description = Stav věci.
module-type.core.ThingStatusUpdateTrigger.config.status.option.UNINITIALIZED = NEINICIALIZOVANÝ
module-type.core.ThingStatusUpdateTrigger.config.status.option.INITIALIZING = INICIALIZUJE SE
module-type.core.ThingStatusUpdateTrigger.config.status.option.UNKNOWN = NEZNÁMÝ
module-type.core.ThingStatusUpdateTrigger.config.status.option.ONLINE = PŘIPOJENÝ
module-type.core.ThingStatusUpdateTrigger.config.status.option.OFFLINE = ODPOJENÝ
module-type.core.ThingStatusUpdateTrigger.config.status.option.REMOVING = ODSTRAŇOVANÝ
module-type.core.ThingStatusUpdateTrigger.config.status.option.REMOVED = ODSTRANĚNÝ
module-type.core.ThingStatusUpdateTrigger.output.status.label = Stav
module-type.core.ThingStatusUpdateTrigger.output.status.description = Stav věci.
module-type.core.ThingStatusUpdateTrigger.output.event.label = Událost
module-type.core.ThingStatusUpdateTrigger.output.event.description = Událost, která byla odeslána.

# core.TimeOfDayCondition

module-type.core.TimeOfDayCondition.label = je to určitá denní doba
module-type.core.TimeOfDayCondition.description = Vyhodnotí, zda se aktuální čas nachází v uživatelsky nakonfigurovaném časovém rozmezí.
module-type.core.TimeOfDayCondition.config.startTime.label = Čas zahájení
module-type.core.TimeOfDayCondition.config.startTime.description = Začátek časového rozpětí (v hh\:mm)
module-type.core.TimeOfDayCondition.config.endTime.label = Čas ukončení
module-type.core.TimeOfDayCondition.config.endTime.description = Konec časového rozpětí (v hh\:mm)

# ephemeris.DaysetCondition

module-type.ephemeris.DaysetCondition.label = je to den v konfigurované sadě dní
module-type.ephemeris.DaysetCondition.description = Zkontroluje, zda je aktuální den v konfigurované sadě dní.
module-type.ephemeris.DaysetCondition.config.dayset.label = Sada dní
module-type.ephemeris.DaysetCondition.config.dayset.description = Název požadované sady dní, bez předpony.
module-type.ephemeris.DaysetCondition.config.offset.label = Posun
module-type.ephemeris.DaysetCondition.config.offset.description = Dnes +/- posun dní (+1 \= zítra, -1 \= včera).

# ephemeris.HolidayCondition

module-type.ephemeris.HolidayCondition.label = jde o svátek
module-type.ephemeris.HolidayCondition.description = Zkontroluje, zda je v ten den svátek.
module-type.ephemeris.HolidayCondition.config.offset.label = Posun
module-type.ephemeris.HolidayCondition.config.offset.description = Dnes +/- posun dní (+1 \= zítra, -1 \= včera).

# ephemeris.NotHolidayCondition

module-type.ephemeris.NotHolidayCondition.label = není to svátek
module-type.ephemeris.NotHolidayCondition.description = Zkontroluje, zda je v ten den není žádný svátek.
module-type.ephemeris.NotHolidayCondition.config.offset.label = Posun
module-type.ephemeris.NotHolidayCondition.config.offset.description = Dnes +/- posun dní (+1 \= zítra, -1 \= včera).

# ephemeris.WeekdayCondition

module-type.ephemeris.WeekdayCondition.label = jde o pracovní den
module-type.ephemeris.WeekdayCondition.description = Zkontroluje, zda aktuální den není o víkendu.
module-type.ephemeris.WeekdayCondition.config.offset.label = Posun
module-type.ephemeris.WeekdayCondition.config.offset.description = Dnes +/- posun dní (+1 \= zítra, -1 \= včera).

# ephemeris.WeekendCondition

module-type.ephemeris.WeekendCondition.label = jde o víkend
module-type.ephemeris.WeekendCondition.description = Zkontroluje, zda je aktuální den na víkend.
module-type.ephemeris.WeekendCondition.config.offset.label = Posun
module-type.ephemeris.WeekendCondition.config.offset.description = Dnes +/- posun dní (+1 \= zítra, -1 \= včera).

# timer.DateTimeTrigger

module-type.timer.DateTimeTrigger.label = je to datum a čas uvedený v položce
module-type.timer.DateTimeTrigger.description = Spustí se v čase zadaném v položce
module-type.timer.DateTimeTrigger.config.itemName.label = Item
module-type.timer.DateTimeTrigger.config.itemName.description = název položky
module-type.timer.DateTimeTrigger.config.timeOnly.label = Pouze čas
module-type.timer.DateTimeTrigger.config.timeOnly.description = Určuje, zda je třeba porovnat pouze čas položky nebo datum a čas.
module-type.timer.DateTimeTrigger.config.timeOnly.option.true = Ano
module-type.timer.DateTimeTrigger.config.timeOnly.option.false = Ne
module-type.timer.DateTimeTrigger.config.offset.label = Posun
module-type.timer.DateTimeTrigger.config.offset.description = Kolik sekund přidat k času položky.

# timer.DayOfWeekCondition

module-type.timer.DayOfWeekCondition.label = jde o určitý den v týdnu
module-type.timer.DayOfWeekCondition.description = zkontroluje, zda je aktuálně určitý den v týdnu
module-type.timer.DayOfWeekCondition.config.days.label = Dny v týdnu
module-type.timer.DayOfWeekCondition.config.days.description = dny v týdnu, kdy má být pravidlo aktivní

# timer.GenericCronTrigger

module-type.timer.GenericCronTrigger.label = Spuštění dle cron výrazu
module-type.timer.GenericCronTrigger.description = Toto spustí pravidlo v čase podle cron výrazu
module-type.timer.GenericCronTrigger.config.cronExpression.label = Cron výraz
module-type.timer.GenericCronTrigger.config.cronExpression.description = Cron výraz

# timer.TimeOfDayTrigger

module-type.timer.TimeOfDayTrigger.label = jde o pevně stanovený čas dne
module-type.timer.TimeOfDayTrigger.description = Spuštění v konkrétním čase
module-type.timer.TimeOfDayTrigger.config.time.label = Čas
module-type.timer.TimeOfDayTrigger.config.time.description = čas (v hh\:mm)
