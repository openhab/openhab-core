# core.ChannelEventTrigger

module-type.core.ChannelEventTrigger.label = attivazione di un innesco di canale
module-type.core.ChannelEventTrigger.description = Reazione ad un evento di un innesco del canale di un oggetto.
module-type.core.ChannelEventTrigger.config.channelUID.label = Canale
module-type.core.ChannelEventTrigger.config.channelUID.description = L'id del canale che deve essere osservato per l'innesco.
module-type.core.ChannelEventTrigger.config.event.label = Evento
module-type.core.ChannelEventTrigger.config.event.description = L'evento sul canale a cui reagire
module-type.core.ChannelEventTrigger.output.event.label = Evento
module-type.core.ChannelEventTrigger.output.event.description = L'evento dell'innesco del canale

# core.GenericCompareCondition

module-type.core.GenericCompareCondition.label = Condizione per la comparazione
module-type.core.GenericCompareCondition.description = Configurazione della condizione per la comparazione
module-type.core.GenericCompareCondition.config.inputproperty.label = Proprietà ingresso
module-type.core.GenericCompareCondition.config.inputproperty.description = Proprietà del tipo di ingresso da confrontare
module-type.core.GenericCompareCondition.config.right.label = Confrontare con
module-type.core.GenericCompareCondition.config.right.description = Il valore da confrontare con l'ingresso
module-type.core.GenericCompareCondition.config.operator.label = Operatore
module-type.core.GenericCompareCondition.config.operator.description = L'operatore di confronto, consentito sono <,>,\=,\!\=,>\=,<\=
module-type.core.GenericCompareCondition.input.input.label = L'ingresso che verrà confrontato
module-type.core.GenericCompareCondition.input.input.description = L'ingresso che verrà confrontato.

# core.GenericEventCondition

module-type.core.GenericEventCondition.label = Condizione evento
module-type.core.GenericEventCondition.description = Condizione per gli eventi
module-type.core.GenericEventCondition.config.topic.label = Topic
module-type.core.GenericEventCondition.config.topic.description = Il topic, come lo stile di un glob file-system (operatori *, **, {}), corrisponderà a tutti gli eventi se vuoto
module-type.core.GenericEventCondition.config.source.label = Sorgente
module-type.core.GenericEventCondition.config.source.description = la sorgente dell'evento (ad es. org.openhab.core.expire, ecc.) corrisponderà a tutti gli eventi se vuota
module-type.core.GenericEventCondition.config.types.label = Tipo Evento
module-type.core.GenericEventCondition.config.types.description = il tipo di evento che il trigger dovrebbe ascoltare. È possibile specificare più tipi separati da virgola. Corrisponderà a tutti gli eventi se vuoti
module-type.core.GenericEventCondition.config.payload.label = Payload Evento
module-type.core.GenericEventCondition.config.payload.description = Un regex per abbinare il payload serializzato dell'evento. Corrisponderà a tutti gli eventi se vuoto
module-type.core.GenericEventCondition.input.event.label = Evento
module-type.core.GenericEventCondition.input.event.description = L'evento che è stato inviato.

# core.GenericEventTrigger

module-type.core.GenericEventTrigger.label = Innesco dell'evento base
module-type.core.GenericEventTrigger.description = Regole di innesco degli eventi
module-type.core.GenericEventTrigger.config.topic.label = Topic
module-type.core.GenericEventTrigger.config.topic.description = l'argomento, come un glob stile del file-system (*, ** e {} operatori). Corrisponderà a tutti gli eventi se vuoto
module-type.core.GenericEventTrigger.config.source.label = Sorgente
module-type.core.GenericEventTrigger.config.source.description = la sorgente dell'evento (ad es. org.openhab.core.expire, ecc.) corrisponderà a tutti gli eventi se vuoto
module-type.core.GenericEventTrigger.config.types.label = Tipo Evento
module-type.core.GenericEventTrigger.config.types.description = il tipo di evento che il trigger dovrebbe ascoltare. È possibile specificare più tipi separati da virgola. Corrisponderà a tutti gli eventi se vuoti
module-type.core.GenericEventTrigger.config.payload.label = Payload Evento
module-type.core.GenericEventTrigger.config.payload.description = Un regex per abbinare il payload serializzato dell'evento. Corrisponderà a tutti gli eventi se vuoto
module-type.core.GenericEventTrigger.output.event.label = Evento
module-type.core.GenericEventTrigger.output.event.description = Gli eventi che sono stati inviati.

# core.GroupCommandTrigger

module-type.core.GroupCommandTrigger.label = un membro di un gruppo di elementi riceve un comando
module-type.core.GroupCommandTrigger.description = Questo innesca la regola se un membro di un gruppo di elementi riceve un comando.
module-type.core.GroupCommandTrigger.config.groupName.label = Gruppo
module-type.core.GroupCommandTrigger.config.groupName.description = Il nome del gruppo di elementi
module-type.core.GroupCommandTrigger.config.command.label = Comando
module-type.core.GroupCommandTrigger.config.command.description = il comando ricevuto
module-type.core.GroupCommandTrigger.config.command.option.ON = ON
module-type.core.GroupCommandTrigger.config.command.option.OFF = OFF
module-type.core.GroupCommandTrigger.config.command.option.OPEN = APERTO
module-type.core.GroupCommandTrigger.config.command.option.CLOSED = CHIUSO
module-type.core.GroupCommandTrigger.config.command.option.UP = SU
module-type.core.GroupCommandTrigger.config.command.option.DOWN = GIÙ
module-type.core.GroupCommandTrigger.output.triggeringItem.label = Elemento innescante
module-type.core.GroupCommandTrigger.output.triggeringItem.description = Il membro del gruppo che ha ricevuto il comando
module-type.core.GroupCommandTrigger.output.command.label = Comando
module-type.core.GroupCommandTrigger.output.command.description = Il comando ricevuto
module-type.core.GroupCommandTrigger.output.event.label = Evento
module-type.core.GroupCommandTrigger.output.event.description = L'evento che è stato inviato.

# core.GroupStateChangeTrigger

module-type.core.GroupStateChangeTrigger.label = Cambiamenti dello stato di un membro di un gruppo
module-type.core.GroupStateChangeTrigger.description = Questo innesca la regola se lo stato di un membro di un gruppo di elementi è cambiato.
module-type.core.GroupStateChangeTrigger.config.groupName.label = Gruppo
module-type.core.GroupStateChangeTrigger.config.groupName.description = il nome del gruppo di elementi
module-type.core.GroupStateChangeTrigger.config.previousState.label = Stato precedente
module-type.core.GroupStateChangeTrigger.config.previousState.description = Lo stato precedente richiesto per l'elemento
module-type.core.GroupStateChangeTrigger.config.previousState.option.ON = ON
module-type.core.GroupStateChangeTrigger.config.previousState.option.OFF = OFF
module-type.core.GroupStateChangeTrigger.config.previousState.option.OPEN = APERTO
module-type.core.GroupStateChangeTrigger.config.previousState.option.CLOSED = CHIUSO
module-type.core.GroupStateChangeTrigger.config.previousState.option.UP = SU
module-type.core.GroupStateChangeTrigger.config.previousState.option.DOWN = GIÙ
module-type.core.GroupStateChangeTrigger.config.state.label = Stato
module-type.core.GroupStateChangeTrigger.config.state.description = lo stato dell'elemento
module-type.core.GroupStateChangeTrigger.config.state.option.ON = ON
module-type.core.GroupStateChangeTrigger.config.state.option.OFF = OFF
module-type.core.GroupStateChangeTrigger.config.state.option.OPEN = APERTO
module-type.core.GroupStateChangeTrigger.config.state.option.CLOSED = CHIUSO
module-type.core.GroupStateChangeTrigger.config.state.option.UP = SU
module-type.core.GroupStateChangeTrigger.config.state.option.DOWN = GIÙ
module-type.core.GroupStateChangeTrigger.output.triggeringItem.label = Elemento innescante
module-type.core.GroupStateChangeTrigger.output.triggeringItem.description = L'elemento del gruppo che ha cambiato stato
module-type.core.GroupStateChangeTrigger.output.newState.label = Nuovo stato
module-type.core.GroupStateChangeTrigger.output.newState.description = Lo stato del nuovo elemento
module-type.core.GroupStateChangeTrigger.output.oldState.label = Vecchio stato
module-type.core.GroupStateChangeTrigger.output.oldState.description = Lo stato del vecchio elemento
module-type.core.GroupStateChangeTrigger.output.event.label = Evento
module-type.core.GroupStateChangeTrigger.output.event.description = L'evento che è stato inviato.

# core.GroupStateUpdateTrigger

module-type.core.GroupStateUpdateTrigger.label = Lo stato di un membro di un gruppo di elementi è aggiornato
module-type.core.GroupStateUpdateTrigger.description = Questo innesca la regola se lo stato di un membro di un gruppo di elementi viene aggiornato (anche se non cambia).
module-type.core.GroupStateUpdateTrigger.config.groupName.label = Gruppo
module-type.core.GroupStateUpdateTrigger.config.groupName.description = Il nome del gruppo di elementi
module-type.core.GroupStateUpdateTrigger.config.state.label = Stato
module-type.core.GroupStateUpdateTrigger.config.state.description = Lo stato di un elemento
module-type.core.GroupStateUpdateTrigger.config.state.option.ON = ON
module-type.core.GroupStateUpdateTrigger.config.state.option.OFF = OFF
module-type.core.GroupStateUpdateTrigger.config.state.option.OPEN = APERTO
module-type.core.GroupStateUpdateTrigger.config.state.option.CLOSED = CHIUSO
module-type.core.GroupStateUpdateTrigger.config.state.option.UP = SU
module-type.core.GroupStateUpdateTrigger.config.state.option.DOWN = GIÙ
module-type.core.GroupStateUpdateTrigger.output.triggeringItem.label = Elemento innescante
module-type.core.GroupStateUpdateTrigger.output.triggeringItem.description = Il membro del gruppo che ha aggiornato il suo stato
module-type.core.GroupStateUpdateTrigger.output.state.label = Stato
module-type.core.GroupStateUpdateTrigger.output.state.description = Lo stato dell'elemento
module-type.core.GroupStateUpdateTrigger.output.event.label = Evento
module-type.core.GroupStateUpdateTrigger.output.event.description = L'evento che è stato inviato.

# core.ItemCommandAction

module-type.core.ItemCommandAction.label = Invia un comando
module-type.core.ItemCommandAction.description = Invia un comando a uno specifico elemento.
module-type.core.ItemCommandAction.config.itemName.label = Elemento
module-type.core.ItemCommandAction.config.itemName.description = Il nome dell'elemento
module-type.core.ItemCommandAction.config.command.label = Comando
module-type.core.ItemCommandAction.config.command.description = il comando da inviare (sovrascrive un valore potenziale d'ingresso)
module-type.core.ItemCommandAction.config.command.option.ON = ON
module-type.core.ItemCommandAction.config.command.option.OFF = OFF
module-type.core.ItemCommandAction.config.command.option.OPEN = APERTO
module-type.core.ItemCommandAction.config.command.option.CLOSED = CHIUSO
module-type.core.ItemCommandAction.config.command.option.UP = SU
module-type.core.ItemCommandAction.config.command.option.DOWN = GIÙ
module-type.core.ItemCommandAction.input.command.label = Comando
module-type.core.ItemCommandAction.input.command.description = comando che verrà inviato all'elemento.

# core.ItemCommandTrigger

module-type.core.ItemCommandTrigger.label = un elemento riceve un comando
module-type.core.ItemCommandTrigger.description = Questo innesca la regola se un elemento riceve un comando.
module-type.core.ItemCommandTrigger.config.itemName.label = Elemento
module-type.core.ItemCommandTrigger.config.itemName.description = Il nome dell'elemento
module-type.core.ItemCommandTrigger.config.command.label = Comando
module-type.core.ItemCommandTrigger.config.command.description = Il comando ricevuto
module-type.core.ItemCommandTrigger.config.command.option.ON = ON
module-type.core.ItemCommandTrigger.config.command.option.OFF = OFF
module-type.core.ItemCommandTrigger.config.command.option.OPEN = APERTO
module-type.core.ItemCommandTrigger.config.command.option.CLOSED = CHIUSO
module-type.core.ItemCommandTrigger.config.command.option.UP = SU
module-type.core.ItemCommandTrigger.config.command.option.DOWN = GIÙ
module-type.core.ItemCommandTrigger.output.command.label = Comando
module-type.core.ItemCommandTrigger.output.command.description = Il comando ricevuto
module-type.core.ItemCommandTrigger.output.event.label = Evento
module-type.core.ItemCommandTrigger.output.event.description = L'evento che è stato inviato.

# core.ItemStateChangeTrigger

module-type.core.ItemStateChangeTrigger.label = è cambiato lo stato di un elemento
module-type.core.ItemStateChangeTrigger.description = Questo innesca la regola se cambia lo stato di un elemento.
module-type.core.ItemStateChangeTrigger.config.itemName.label = Elemento
module-type.core.ItemStateChangeTrigger.config.itemName.description = Il nome dell'elemento
module-type.core.ItemStateChangeTrigger.config.previousState.label = Stato precedente
module-type.core.ItemStateChangeTrigger.config.previousState.description = Lo stato precedente richiesto per l'elemento
module-type.core.ItemStateChangeTrigger.config.previousState.option.ON = ON
module-type.core.ItemStateChangeTrigger.config.previousState.option.OFF = OFF
module-type.core.ItemStateChangeTrigger.config.previousState.option.OPEN = APERTO
module-type.core.ItemStateChangeTrigger.config.previousState.option.CLOSED = CHIUSO
module-type.core.ItemStateChangeTrigger.config.previousState.option.UP = SU
module-type.core.ItemStateChangeTrigger.config.previousState.option.DOWN = GIÙ
module-type.core.ItemStateChangeTrigger.config.state.label = Stato
module-type.core.ItemStateChangeTrigger.config.state.description = Lo stato dell'elemento
module-type.core.ItemStateChangeTrigger.config.state.option.ON = ON
module-type.core.ItemStateChangeTrigger.config.state.option.OFF = OFF
module-type.core.ItemStateChangeTrigger.config.state.option.OPEN = APERTO
module-type.core.ItemStateChangeTrigger.config.state.option.CLOSED = CHIUSO
module-type.core.ItemStateChangeTrigger.config.state.option.UP = SU
module-type.core.ItemStateChangeTrigger.config.state.option.DOWN = GIÙ
module-type.core.ItemStateChangeTrigger.output.newState.label = Nuovo stato
module-type.core.ItemStateChangeTrigger.output.newState.description = Il nuovo stato dell'elemento
module-type.core.ItemStateChangeTrigger.output.oldState.label = Vecchio stato
module-type.core.ItemStateChangeTrigger.output.oldState.description = Il vecchio stato dell'elemento
module-type.core.ItemStateChangeTrigger.output.event.label = Evento
module-type.core.ItemStateChangeTrigger.output.event.description = L'evento che è stato inviato.

# core.ItemStateCondition

module-type.core.ItemStateCondition.label = un elemento ha un dato stato
module-type.core.ItemStateCondition.description = Confronta lo stato dell'elemento con il valore dato
module-type.core.ItemStateCondition.config.itemName.label = Elemento
module-type.core.ItemStateCondition.config.itemName.description = Il nome dell'elemento
module-type.core.ItemStateCondition.config.operator.label = Operatore
module-type.core.ItemStateCondition.config.operator.description = l'operatore di confronto (uno di \=,<,>,\!\=,>\=,<\=)
module-type.core.ItemStateCondition.config.operator.option.\= = \=
module-type.core.ItemStateCondition.config.operator.option.\!\= = \!\=
module-type.core.ItemStateCondition.config.operator.option.> = >
module-type.core.ItemStateCondition.config.operator.option.>\= = >\=
module-type.core.ItemStateCondition.config.operator.option.< = <
module-type.core.ItemStateCondition.config.operator.option.<\= = <\=
module-type.core.ItemStateCondition.config.state.label = Stato
module-type.core.ItemStateCondition.config.state.description = lo stato da confrontare con
module-type.core.ItemStateCondition.config.state.option.ON = ON
module-type.core.ItemStateCondition.config.state.option.OFF = OFF
module-type.core.ItemStateCondition.config.state.option.OPEN = APERTO
module-type.core.ItemStateCondition.config.state.option.CLOSED = CHIUSO
module-type.core.ItemStateCondition.config.state.option.UP = SU
module-type.core.ItemStateCondition.config.state.option.DOWN = GIÙ

# core.ItemStateUpdateAction

module-type.core.ItemStateUpdateAction.label = aggiornare lo stato di un elemento
module-type.core.ItemStateUpdateAction.description = Aggiorna lo stato di uno specifico elemento.
module-type.core.ItemStateUpdateAction.config.itemName.label = Elemento
module-type.core.ItemStateUpdateAction.config.itemName.description = Il nome dell'elemento
module-type.core.ItemStateUpdateAction.config.state.label = Stato
module-type.core.ItemStateUpdateAction.config.state.description = Lo stato a cui aggiornare l'elemento (sovrascrive un valore potenziale d'ingresso)
module-type.core.ItemStateUpdateAction.config.state.option.ON = ON
module-type.core.ItemStateUpdateAction.config.state.option.OFF = OFF
module-type.core.ItemStateUpdateAction.config.state.option.OPEN = APERTO
module-type.core.ItemStateUpdateAction.config.state.option.CLOSED = CHIUSO
module-type.core.ItemStateUpdateAction.config.state.option.UP = SU
module-type.core.ItemStateUpdateAction.config.state.option.DOWN = GIÙ
module-type.core.ItemStateUpdateAction.input.state.label = Stato
module-type.core.ItemStateUpdateAction.input.state.description = Stato che verrà importato per l'elemento

# core.ItemStateUpdateTrigger

module-type.core.ItemStateUpdateTrigger.label = stato di un elemento aggiornato
module-type.core.ItemStateUpdateTrigger.description = Questo innesca la regola se lo stato di un elemento viene aggiornato (anche se non cambia).
module-type.core.ItemStateUpdateTrigger.config.itemName.label = Elemento
module-type.core.ItemStateUpdateTrigger.config.itemName.description = Il nome dell'elemento
module-type.core.ItemStateUpdateTrigger.config.state.label = Stato
module-type.core.ItemStateUpdateTrigger.config.state.description = Lo stato dell'elemento
module-type.core.ItemStateUpdateTrigger.config.state.option.ON = ON
module-type.core.ItemStateUpdateTrigger.config.state.option.OFF = OFF
module-type.core.ItemStateUpdateTrigger.config.state.option.OPEN = APERTO
module-type.core.ItemStateUpdateTrigger.config.state.option.CLOSED = CHIUSO
module-type.core.ItemStateUpdateTrigger.config.state.option.UP = SU
module-type.core.ItemStateUpdateTrigger.config.state.option.DOWN = GIÙ
module-type.core.ItemStateUpdateTrigger.output.state.label = Stato
module-type.core.ItemStateUpdateTrigger.output.state.description = Lo stato dell'elemento
module-type.core.ItemStateUpdateTrigger.output.event.label = Evento
module-type.core.ItemStateUpdateTrigger.output.event.description = L'evento che è stato inviato.

# core.RuleEnablementAction

module-type.core.RuleEnablementAction.label = abilita o disabilita le rules
module-type.core.RuleEnablementAction.description = Abilita o disabilita una regola o un gruppo di regole specificate dal loro UID.
module-type.core.RuleEnablementAction.config.enable.label = Abilita regole
module-type.core.RuleEnablementAction.config.enable.description = 'true' abilita tutte le regole specificate, 'false' le disabilitano.
module-type.core.RuleEnablementAction.config.enable.option.true = Abilita
module-type.core.RuleEnablementAction.config.enable.option.false = Disabilita
module-type.core.RuleEnablementAction.config.ruleUIDs.label = Regole
module-type.core.RuleEnablementAction.config.ruleUIDs.description = Specifica le regole che devono essere abilitate o disabilitate.

# core.RunRuleAction

module-type.core.RunRuleAction.label = Esegui le regole
module-type.core.RunRuleAction.description = esegue una regola o un gruppo di regole individuate dal loro UID.
module-type.core.RunRuleAction.config.ruleUIDs.label = Regole
module-type.core.RunRuleAction.config.ruleUIDs.description = Specifica la/le regole di destinazione che devono essere eseguite.
module-type.core.RunRuleAction.config.considerConditions.label = Considera condizioni
module-type.core.RunRuleAction.config.considerConditions.description = Specifica se le condizioni della o delle regole di destinazione da eseguire debbano essere considerate o meno.
module-type.core.RunRuleAction.config.considerConditions.option.true = Si
module-type.core.RunRuleAction.config.considerConditions.option.false = No

# core.SystemStartlevelTrigger

module-type.core.SystemStartlevelTrigger.label = Raggiunto un livello iniziale del sistema
module-type.core.SystemStartlevelTrigger.description = Questo innesca la regola se un dato livello iniziale è stato raggiunto dal sistema.
module-type.core.SystemStartlevelTrigger.config.startlevel.label = Livello Iniziale
module-type.core.SystemStartlevelTrigger.config.startlevel.description = Il livello iniziale del sistema.
module-type.core.SystemStartlevelTrigger.config.startlevel.option.40 = 40 - Regole caricate
module-type.core.SystemStartlevelTrigger.config.startlevel.option.50 = 50 - Avviamento del motore di gestione regole
module-type.core.SystemStartlevelTrigger.config.startlevel.option.70 = 70 - Interfacce d'utente avviate
module-type.core.SystemStartlevelTrigger.config.startlevel.option.80 = 80 - Oggetti inizializzati
module-type.core.SystemStartlevelTrigger.config.startlevel.option.100 = 100 - Avvio completato
module-type.core.SystemStartlevelTrigger.output.startlevel.label = Livello Iniziale
module-type.core.SystemStartlevelTrigger.output.startlevel.description = Il livello iniziale del sistema.

# core.ThingStatusChangeTrigger

module-type.core.ThingStatusChangeTrigger.label = cambio stato di un oggetto
module-type.core.ThingStatusChangeTrigger.description = Questo innesca la regola se cambia lo stato di un oggetto.
module-type.core.ThingStatusChangeTrigger.config.thingUID.label = Oggetto
module-type.core.ThingStatusChangeTrigger.config.thingUID.description = L'UID dell'oggetto.
module-type.core.ThingStatusChangeTrigger.config.previousStatus.label = Stato precedente
module-type.core.ThingStatusChangeTrigger.config.previousStatus.description = Lo stato precedente dell'oggetto.
module-type.core.ThingStatusChangeTrigger.config.previousStatus.option.UNINITIALIZED = NON-INIZIALIZZATO
module-type.core.ThingStatusChangeTrigger.config.previousStatus.option.INITIALIZING = INIZIALIZZAZIONE
module-type.core.ThingStatusChangeTrigger.config.previousStatus.option.UNKNOWN = SCONOSCIUTO
module-type.core.ThingStatusChangeTrigger.config.previousStatus.option.ONLINE = IN-LINEA
module-type.core.ThingStatusChangeTrigger.config.previousStatus.option.OFFLINE = FUORI-LINEA
module-type.core.ThingStatusChangeTrigger.config.previousStatus.option.REMOVING = RIMOZIONE
module-type.core.ThingStatusChangeTrigger.config.previousStatus.option.REMOVED = RIMOSSO
module-type.core.ThingStatusChangeTrigger.config.status.label = Stato
module-type.core.ThingStatusChangeTrigger.config.status.description = Lo stato dell'oggetto.
module-type.core.ThingStatusChangeTrigger.config.status.option.UNINITIALIZED = NON-INIZIALIZZATO
module-type.core.ThingStatusChangeTrigger.config.status.option.INITIALIZING = INIZIALIZZAZIONE
module-type.core.ThingStatusChangeTrigger.config.status.option.UNKNOWN = SCONOSCIUTO
module-type.core.ThingStatusChangeTrigger.config.status.option.ONLINE = IN-LINEA
module-type.core.ThingStatusChangeTrigger.config.status.option.OFFLINE = FUORI-LINEA
module-type.core.ThingStatusChangeTrigger.config.status.option.REMOVING = RIMOZIONE
module-type.core.ThingStatusChangeTrigger.config.status.option.REMOVED = RIMOSSO
module-type.core.ThingStatusChangeTrigger.output.newStatus.label = Nuovo stato
module-type.core.ThingStatusChangeTrigger.output.newStatus.description = Il nuovo status dell'oggetto.
module-type.core.ThingStatusChangeTrigger.output.oldStatus.label = Vecchio stato
module-type.core.ThingStatusChangeTrigger.output.oldStatus.description = Il vecchio stato dell'oggetto.
module-type.core.ThingStatusChangeTrigger.output.event.label = Evento
module-type.core.ThingStatusChangeTrigger.output.event.description = L'evento che è stato inviato.

# core.ThingStatusUpdateTrigger

module-type.core.ThingStatusUpdateTrigger.label = Lo stato di un oggetto è aggiornato
module-type.core.ThingStatusUpdateTrigger.description = Questo innesca la regola se lo stato di un oggetto viene aggiornato (anche se non cambia).
module-type.core.ThingStatusUpdateTrigger.config.thingUID.label = Oggetto
module-type.core.ThingStatusUpdateTrigger.config.thingUID.description = L'UID dell'oggetto. Puoi usare '*' come jolly per selezionare più oggetti.
module-type.core.ThingStatusUpdateTrigger.config.status.label = Stato
module-type.core.ThingStatusUpdateTrigger.config.status.description = Lo stato dell'oggetto.
module-type.core.ThingStatusUpdateTrigger.config.status.option.UNINITIALIZED = NON-INIZIALIZZATO
module-type.core.ThingStatusUpdateTrigger.config.status.option.INITIALIZING = INIZIALIZZAZIONE
module-type.core.ThingStatusUpdateTrigger.config.status.option.UNKNOWN = SCONOSCIUTO
module-type.core.ThingStatusUpdateTrigger.config.status.option.ONLINE = IN-LINEA
module-type.core.ThingStatusUpdateTrigger.config.status.option.OFFLINE = FUORI-LINEA
module-type.core.ThingStatusUpdateTrigger.config.status.option.REMOVING = RIMOZIONE
module-type.core.ThingStatusUpdateTrigger.config.status.option.REMOVED = RIMOSSO
module-type.core.ThingStatusUpdateTrigger.output.status.label = Stato
module-type.core.ThingStatusUpdateTrigger.output.status.description = Lo stato dell'oggetto.
module-type.core.ThingStatusUpdateTrigger.output.event.label = Evento
module-type.core.ThingStatusUpdateTrigger.output.event.description = L'evento che è stato inviato.

# core.TimeOfDayCondition

module-type.core.TimeOfDayCondition.label = è una certa ora del giorno
module-type.core.TimeOfDayCondition.description = Valuta se l'ora corrente è entro un intervallo di tempo configurato dall'utente.
module-type.core.TimeOfDayCondition.config.startTime.label = Ora di inizio
module-type.core.TimeOfDayCondition.config.startTime.description = Inizio dell'intervallo di tempo (in oo\:mm)
module-type.core.TimeOfDayCondition.config.endTime.label = Ora finale
module-type.core.TimeOfDayCondition.config.endTime.description = Fine dell'intervallo di tempo (in oo\:mm)

# ephemeris.DaysetCondition

module-type.ephemeris.DaysetCondition.label = è un giorno nell'intervallo configurato
module-type.ephemeris.DaysetCondition.description = Controlla se il giorno corrente è in un intervallo di giorni configurato.
module-type.ephemeris.DaysetCondition.config.dayset.label = Intervallo di giorni
module-type.ephemeris.DaysetCondition.config.dayset.description = Nome dell'insieme di giorni richiesto, senza prefisso.
module-type.ephemeris.DaysetCondition.config.offset.label = Scostamento
module-type.ephemeris.DaysetCondition.config.offset.description = Oggi +/- giorni di scostamento (+1 \= domani, -1 \= ieri).

# ephemeris.HolidayCondition

module-type.ephemeris.HolidayCondition.label = è un giorno di vacanza
module-type.ephemeris.HolidayCondition.description = Controlla se il giorno corrente è una vacanza.
module-type.ephemeris.HolidayCondition.config.offset.label = Scostamento
module-type.ephemeris.HolidayCondition.config.offset.description = Oggi +/- giorni di scostamento (+1 \= domani, -1 \= ieri).

# ephemeris.NotHolidayCondition

module-type.ephemeris.NotHolidayCondition.label = non è un giorno di vacanza
module-type.ephemeris.NotHolidayCondition.description = Controlla se il giorno corrente non è una vacanza.
module-type.ephemeris.NotHolidayCondition.config.offset.label = Scostamento
module-type.ephemeris.NotHolidayCondition.config.offset.description = Oggi +/- giorni di scostamento (+1 \= domani, -1 \= ieri).

# ephemeris.WeekdayCondition

module-type.ephemeris.WeekdayCondition.label = è un giorno della settimana
module-type.ephemeris.WeekdayCondition.description = Controlla se il giorno corrente non è nel fine-settimana.
module-type.ephemeris.WeekdayCondition.config.offset.label = Scostamento
module-type.ephemeris.WeekdayCondition.config.offset.description = Oggi +/- giorni di scostamento (+1 \= domani, -1 \= ieri).

# ephemeris.WeekendCondition

module-type.ephemeris.WeekendCondition.label = è un fine-settimana
module-type.ephemeris.WeekendCondition.description = Controlla se il giorno corrente è nel fine-settimana.
module-type.ephemeris.WeekendCondition.config.offset.label = Scostamento
module-type.ephemeris.WeekendCondition.config.offset.description = Oggi +/- giorni di scostamento (+1 \= domani, -1 \= ieri).

# timer.DateTimeTrigger

module-type.timer.DateTimeTrigger.label = è una data e un'ora specificate per un elemento
module-type.timer.DateTimeTrigger.description = Innesca ad un orario specifico per un elemento
module-type.timer.DateTimeTrigger.config.itemName.label = Elemento
module-type.timer.DateTimeTrigger.config.itemName.description = Il nome dell'elemento
module-type.timer.DateTimeTrigger.config.timeOnly.label = Solo ora
module-type.timer.DateTimeTrigger.config.timeOnly.description = Specifica se solo l'ora dell'elemento deve essere confrontata o la data e l'ora.
module-type.timer.DateTimeTrigger.config.timeOnly.option.true = Si
module-type.timer.DateTimeTrigger.config.timeOnly.option.false = No

# timer.DayOfWeekCondition

module-type.timer.DayOfWeekCondition.label = è un certo giorno della settimana
module-type.timer.DayOfWeekCondition.description = controlla se il giorno corrente è nella settimana
module-type.timer.DayOfWeekCondition.config.days.label = Giorni della settimana
module-type.timer.DayOfWeekCondition.config.days.description = i giorni della settimana in cui la regola deve essere attiva

# timer.GenericCronTrigger

module-type.timer.GenericCronTrigger.label = Innesco pianificato
module-type.timer.GenericCronTrigger.description = Questo innesca una regola basata su una definizione del pianificatore
module-type.timer.GenericCronTrigger.config.cronExpression.label = Definizione del pianificatore
module-type.timer.GenericCronTrigger.config.cronExpression.description = Definizione del pianificatore

# timer.TimeOfDayTrigger

module-type.timer.TimeOfDayTrigger.label = è una certa ora del giorno
module-type.timer.TimeOfDayTrigger.description = Innesca ad uno specifico orario
module-type.timer.TimeOfDayTrigger.config.time.label = Orario
module-type.timer.TimeOfDayTrigger.config.time.description = L'orario (in oo\:mm)
